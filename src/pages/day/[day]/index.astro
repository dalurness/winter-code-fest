---
import { getCollection } from "astro:content";
import LayoutNavbarLayout from "../../../layouts/LayoutNavbar.astro";
import Question from "../../../components/Question.astro";
import { DynamicSolution } from "../../../components/DynamicSolution";
import { Link } from "../../../components/Link";

export async function getStaticPaths() {
  const blogEntries = await getCollection("days");
  return blogEntries.map((entry) => ({
    params: { day: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;

const solutions = await getCollection("communitySolutions", ({ id }) => {
  return id.startsWith(`${entry.slug}/`);
});
const solutionList = solutions.map((s) => {
  return {
    username: s.slug.split("/")[1]!,
    descriptions: s.data.descriptions,
  };
});
const { Content } = await entry.render();

const day = Number(entry.slug);
const { title } = entry.data;
---

<LayoutNavbarLayout day={day} title={title}>
  <Question day={day} title={title}>
    <Content />
  </Question>

  <DynamicSolution day={day} client:load />

  <h2 class="mt-20">Solutions</h2>
  <ul class="mb-10 list-inside list-disc">
    {
      solutionList.map(({ username, descriptions }) => (
        <li>
          <Link href={`./solution/${username}/`}>
            {username} -{" "}
            {descriptions.map((description) => (
              <span class="border-yeti-light-9 border-2 rounded-lg bg-yeti-light-3 px-1 mx-1">
                {description}
              </span>
            ))}
          </Link>
        </li>
      ))
    }
  </ul>
</LayoutNavbarLayout>
